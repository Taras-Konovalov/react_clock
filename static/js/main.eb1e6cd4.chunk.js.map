{"version":3,"sources":["components/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","timer","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","newName","Math","floor","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMA8CeA,G,kNA1CbC,MAAQ,CACNC,KAAM,IAAIC,M,uDAGZ,WAAqB,IAAD,OAClBC,KAAKH,MAAMI,MAAQC,aAAY,WAC7B,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,O,gCAGL,SAAmBC,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAEhCJ,QAAQC,IAAR,8CACIE,EAAUC,KADd,eACyBR,KAAKS,MAAMD,S,kCAIxC,WACEE,cAAcV,KAAKH,MAAMI,S,oBAG3B,WACE,OACE,oCACE,2CAGA,mDACoBD,KAAKH,MAAMC,KAAKQ,4B,GAhCxBK,IAAMC,YC2CXC,E,4MAzCbhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,4CAGb,WAAU,IAAD,OACCD,EAAmBd,KAAKH,MAAxBiB,eACFE,EAAUC,KAAKC,MAAsB,IAAhBD,KAAKE,UAEhC,OACE,oCACGL,GAAkB,kBAAC,EAAD,CAAON,KAAMR,KAAKH,MAAMkB,YAC3C,4BACEK,KAAK,SACLC,QAAS,WACP,EAAKlB,SAAS,CAAEW,gBAAgB,MAHpC,cAQA,4BACEM,KAAK,SACLC,QAAS,WACP,EAAKlB,SAAS,CAAEW,gBAAgB,MAHpC,cAQA,4BACEM,KAAK,SACLC,QAAS,WACP,EAAKlB,SAAS,CAAEY,UAAWC,MAH/B,oB,GA7BUL,IAAMC,WCAxBU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.eb1e6cd4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.state.timer = setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from\n        ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timer);\n  }\n\n  render() {\n    return (\n      <>\n        <h1>\n          React clock\n        </h1>\n        <p>\n          {`Current time: ${this.state.date.toLocaleTimeString()}`}\n        </p>\n      </>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n\nexport default Clock;\n","import React from 'react';\nimport './App.scss';\nimport Clock from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  }\n\n  render() {\n    const { isClockVisible } = this.state;\n    const newName = Math.floor(Math.random() * 100);\n\n    return (\n      <>\n        {isClockVisible && <Clock name={this.state.clockName} />}\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: true });\n          }}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: false });\n          }}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ clockName: newName });\n          }}\n        >\n          Random name\n        </button>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}